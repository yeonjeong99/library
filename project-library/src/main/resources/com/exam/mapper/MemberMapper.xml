<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.mapper.MemberMapper">

	<insert id="insert">
		INSERT INTO member (member_id, password, name, gender, email, tel, book_overdue, reg_date)
		VALUES (#{memberId}, #{password}, #{name}, #{gender}, #{email}, #{tel}, #{bookOverdue}, CURRENT_TIMESTAMP)
	</insert>

	<select id="getList" resultType="memberVO">
		SELECT * FROM member ORDER BY member_id
	</select>

	<select id="getMemberById" resultType="memberVO">
		SELECT * FROM member WHERE
		member_id = #{memberId}
	</select>
	
	<resultMap type="memberVO" id="memberAndAuthByIdMap">
		<id column= "member_id" property = "memberId"/>
		<result column = "password" property = "password"/>
		<result column = "name" property = "name"/>
		<result column = "gender" property = "gender"/>
		<result column = "email" property = "email"/>
		<result column = "tel" property = "tel"/>
		<result column = "regdate" property = "regDate"/>
		<collection property="authList" ofType="authVO">
			<result column = "member_id" property = "id"/>
			<result column = "auth" property = "auth"/>
		</collection>
	</resultMap>
	<select id = "getMemberAndAuthById" resultMap="memberAndAuthByIdMap">
		SELECT m.member_id, m.password, m.name, m.gender, m.email, m.tel, m.reg_date, a.auth
		FROM member m LEFT JOIN member_auth a
		ON m.member_id = a.id
		WHERE m.member_id = #{id};
	
	</select>

	<delete id="delete">
		DELETE member WHERE member_id = #{member_id}
	</delete>

	<update id="update">
		UPDATE member
		SET password = #{password}, name = #{name}, reg_date = CURRENT_TIMESTAMP
		WHERE member_id = #{member_id}
	</update>
	
	<select id="countById" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_id = #{member_id}
	</select>
	
		<!-- 회원목록 -->
	<select id="getMemberByIdTest" resultType="memberVO">
		SELECT * FROM member WHERE member_id = #{id}
	</select>

	<update id="updatemember">
		UPDATE member
		SET password = #{password}, name = #{name}, gender = #{gender}, email = #{email}, tel = #{tel}, reg_date = CURRENT_TIMESTAMP
		WHERE member_id = #{memberId} 
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="selectByEmail" resultType="memberVO">
	SELECT * FROM member WHERE email =#{email}
	</select>
	
	<!-- 비밀번호 찾기 (이메일,아이디로)-->
	<select id="selectByIdEmail" resultType="memberVO">
	SELECT * FROM member WHERE email =#{email}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="passUpdate">
		UPDATE member
		SET password = #{password}
		WHERE member_id = #{idDB} 
	</update>
	
	<update id="updateMemberOverDue">
		UPDATE member
		SET book_overdue = (book_overdue-1)
		WHERE member_id = #{memberId}
	</update>
	
</mapper>