<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<bean id = "passwordEncoder" class = "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id = "customUserDetailsService" class = "com.exam.security.CustomUserDetailsService"/>

	<bean id="customAccessDeniedHandler" class="com.exam.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccessHandler" class="com.exam.security.CustomLoginSuccessHandler"/>

	<security:http>
		<security:access-denied-handler ref="customAccessDeniedHandler"/>
		<!-- get 요청 URL을 login-page속성값으로 설정 -->
		<!-- 즉, member controller의 login url이 오면 시큐리티 쪽으로 넘겨주는 행위. -->
		<security:form-login login-page="/member/login" authentication-success-handler-ref="customLoginSuccessHandler"/>
		
		<security:logout logout-url="/member/logout" invalidate-session="true" logout-success-url="/" delete-cookies="remember-me,JSESSION_ID"/>
      
                                                               <!-- 3시간 -->
      <security:remember-me data-source-ref="dataSource" token-validity-seconds="10800"/>
		
		<!-- <security:csrf disabled="true"/> -->
		<!-- 기본적으로 security는 csrf를 강제한다. 없이 하려면 true로 값을 바꿔야함 -->
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider user-service-ref = "customUserDetailsService">
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
